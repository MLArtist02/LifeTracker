package ia.app.ltia.viewcontroller;

import ia.app.ltia.viewcontroller.member.DeleteMemberViewController;
import ia.app.ltia.viewcontroller.member.NewMemberViewController;
import ia.app.ltia.viewcontroller.login.LoginViewController;
import ia.app.ltia.LifeTrackerConstants;
import ia.app.ltia.model.Database;
import ia.app.ltia.model.Member;
import java.awt.event.WindowEvent;

import java.util.ArrayList;
import java.util.Iterator;
import javax.swing.JFrame;

import org.apache.logging.log4j.Logger;
import org.apache.logging.log4j.LogManager;

/**
 *
 * @author
 */
public class HomeViewController extends javax.swing.JFrame {

    private static final Logger logger = LogManager.getLogger(HomeViewController.class);
    
    boolean MONE = false;
    boolean MTWO = false;
    boolean MTHREE = false;
    boolean MFOUR = false;
    
    boolean mOneClicked = false;
    boolean mTwoClicked = false;
    boolean mThreeClicked = false;
    boolean mFourClicked = false;

    private Member member1;
    private Member member2;
    private Member member3;
    private Member member4;
    
    private ArrayList<Member> memberList;
    
    /**
     * Creates new form HomePage
     */
    public HomeViewController() {
        
        logger.info("Constructing HomeViewController");       
        initComponents();
        initUndecoratedFrame();
        initComponentsCustomStyling();        
        this.setTitle(LifeTrackerConstants.TITLE_HOME);        
        loadMembers();
        
    }
   
    private void loadMembers() {
        
        MEMBERONE.setText("Empty");
        MEMBERTWO.setText("Empty");
        MEMBERTHREE.setText("Empty");
        MEMBERFOUR.setText("Empty");
        
        //check if we have members in the database
        //if yes, load the members and its data members        
        Database db = new Database(LifeTrackerConstants.DATABASE_NAME);
        this.memberList = db.getAllMembers();
        logger.info("Members loaded: " + this.memberList.toString());
        
        if(this.memberList.size() == 0){
            //hide the delete button if there are zero members
            this.DELETEMEMBER.setVisible(false);
        }
        
        Iterator i = memberList.iterator();
        int c = 0;
        while (i.hasNext()) {
            Object obj = i.next();
            Member member = (Member)obj;
            c++;
            if(c == 1){
                MEMBERONE.setText(member.getUsername());
                this.member1 = member;
            }
            if(c == 2){
                MEMBERTWO.setText(member.getUsername());
                this.member2 = member;
            }
            if(c == 3){
                MEMBERTHREE.setText(member.getUsername());
                this.member3 = member;
            }
            if(c == 4){
                MEMBERFOUR.setText(member.getUsername());
                this.member4 = member;
            }
        }    
    }

    private void initComponentsCustomStyling() {
        
        //jFrame background
        this.getContentPane().setBackground(LifeTrackerConstants.GUI_BACKGROUND_COLOR_2);
        
        //Top panel background
        this.jPanelTitle.setBackground(LifeTrackerConstants.GUI_COLOR_3);
        
        this.setResizable(false);
        this.pack();
        this.setLocationRelativeTo(null);        
    }
    
    private void initUndecoratedFrame(){
        
        //To remove title, must set undecorated to true.
        //But dont do that in here, it must be in initComponents so 
        //you must do it in the JFrame properties.
        //this.setUndecorated(true);
        
        //Drag the window from by selecting any part of the frame
        FrameDragListener frameDragListener = new FrameDragListener((java.awt.Window)this);
        this.addMouseListener(frameDragListener);
        this.addMouseMotionListener(frameDragListener);

        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);       
        
    }   
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelTitle = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButtonCloseScreen = new javax.swing.JButton();
        MEMBERONE = new javax.swing.JButton();
        MEMBERTWO = new javax.swing.JButton();
        MEMBERTHREE = new javax.swing.JButton();
        MEMBERFOUR = new javax.swing.JButton();
        DELETEMEMBER = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setUndecorated(true);

        jPanelTitle.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Keep Calm Med", 0, 40)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("LifeTracker");

        jButtonCloseScreen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ia/app/ltia/images/exit-icon2-normal.png"))); // NOI18N
        jButtonCloseScreen.setAlignmentY(0.0F);
        jButtonCloseScreen.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 8, 12));
        jButtonCloseScreen.setBorderPainted(false);
        jButtonCloseScreen.setContentAreaFilled(false);
        jButtonCloseScreen.setFocusPainted(false);
        jButtonCloseScreen.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jButtonCloseScreen.setIconTextGap(0);
        jButtonCloseScreen.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonCloseScreen.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/ia/app/ltia/images/exit-icon-highlighted.png"))); // NOI18N
        jButtonCloseScreen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCloseScreenActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelTitleLayout = new javax.swing.GroupLayout(jPanelTitle);
        jPanelTitle.setLayout(jPanelTitleLayout);
        jPanelTitleLayout.setHorizontalGroup(
            jPanelTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTitleLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonCloseScreen, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanelTitleLayout.setVerticalGroup(
            jPanelTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTitleLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButtonCloseScreen)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelTitleLayout.createSequentialGroup()
                .addContainerGap(31, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );

        MEMBERONE.setBackground(new java.awt.Color(51, 102, 255));
        MEMBERONE.setFont(new java.awt.Font("Keep Calm Med", 0, 28)); // NOI18N
        MEMBERONE.setForeground(new java.awt.Color(255, 255, 255));
        MEMBERONE.setText("Empty");
        MEMBERONE.setBorder(null);
        MEMBERONE.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                MEMBERONEMouseEntered(evt);
            }
        });
        MEMBERONE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MEMBERONEActionPerformed(evt);
            }
        });

        MEMBERTWO.setBackground(new java.awt.Color(51, 102, 255));
        MEMBERTWO.setFont(new java.awt.Font("Keep Calm Med", 0, 28)); // NOI18N
        MEMBERTWO.setForeground(new java.awt.Color(255, 255, 255));
        MEMBERTWO.setText("Empty");
        MEMBERTWO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MEMBERTWOActionPerformed(evt);
            }
        });

        MEMBERTHREE.setBackground(new java.awt.Color(51, 102, 255));
        MEMBERTHREE.setFont(new java.awt.Font("Keep Calm Med", 0, 28)); // NOI18N
        MEMBERTHREE.setForeground(new java.awt.Color(255, 255, 255));
        MEMBERTHREE.setText("Empty");
        MEMBERTHREE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MEMBERTHREEActionPerformed(evt);
            }
        });

        MEMBERFOUR.setBackground(new java.awt.Color(51, 102, 255));
        MEMBERFOUR.setFont(new java.awt.Font("Keep Calm Med", 0, 28)); // NOI18N
        MEMBERFOUR.setForeground(new java.awt.Color(255, 255, 255));
        MEMBERFOUR.setText("Empty");
        MEMBERFOUR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MEMBERFOURActionPerformed(evt);
            }
        });

        DELETEMEMBER.setBackground(new java.awt.Color(255, 102, 102));
        DELETEMEMBER.setFont(new java.awt.Font("Keep Calm Med", 0, 14)); // NOI18N
        DELETEMEMBER.setText("Delete Member");
        DELETEMEMBER.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DELETEMEMBERActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Keep Calm Med", 0, 40)); // NOI18N
        jLabel2.setText("Members");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(MEMBERTHREE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(MEMBERONE, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 307, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(DELETEMEMBER, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(MEMBERTWO, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(MEMBERFOUR, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(72, 72, 72))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(418, 418, 418))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanelTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(MEMBERONE, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MEMBERTWO, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(81, 81, 81)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(MEMBERTHREE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(MEMBERFOUR, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(59, 59, 59)
                .addComponent(DELETEMEMBER, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void MEMBERONEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MEMBERONEActionPerformed
        // TODO add your handling code here:
       
        if (MEMBERONE.getText()== "Empty"){
            NewMemberViewController newMemberForm = new NewMemberViewController();
            newMemberForm.setVisible(true);
            dispose();      
        }
        else {
           
            logger.info("Launching LoginViewController for " + member1.getUsername());
            LoginViewController loginForm = new LoginViewController();
            loginForm.setMember(member1);
            loginForm.setVisible(true);
            dispose();
        }
    }//GEN-LAST:event_MEMBERONEActionPerformed

    private void MEMBERFOURActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MEMBERFOURActionPerformed
        // TODO add your handling code here:
       if (MEMBERFOUR.getText()== "Empty"){
            NewMemberViewController newMemberForm = new NewMemberViewController();
            newMemberForm.setVisible(true);
            dispose();      
        }
        else {
            
            logger.info("Launching LoginViewController for " + member4.getUsername());
            LoginViewController loginForm = new LoginViewController();
            loginForm.setMember(member4);
            loginForm.setVisible(true);
            dispose();
        }
    }//GEN-LAST:event_MEMBERFOURActionPerformed

    private void MEMBERTWOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MEMBERTWOActionPerformed
        // TODO add your handling code here:
        if (MEMBERTWO.getText()== "Empty"){
            NewMemberViewController newMemberForm = new NewMemberViewController();
            newMemberForm.setVisible(true);
            dispose();      
        }
        else {
           
            logger.info("Launching LoginViewController for " + member2.getUsername());            
            LoginViewController loginForm = new LoginViewController();
            loginForm.setMember(member2);
            loginForm.setVisible(true);
            dispose();
        }
    }//GEN-LAST:event_MEMBERTWOActionPerformed
      
    private void MEMBERONEMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MEMBERONEMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_MEMBERONEMouseEntered

    private void MEMBERTHREEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MEMBERTHREEActionPerformed
        // TODO add your handling code here:

        if (MEMBERTHREE.getText()== "Empty"){
            NewMemberViewController newMemberForm = new NewMemberViewController();
            newMemberForm.setVisible(true);
            dispose();      
        }
        else {
           
            logger.info("Launching LoginViewController for " + member3.getUsername());            
            LoginViewController loginForm = new LoginViewController();
            loginForm.setMember(member3);
            loginForm.setVisible(true);
            dispose();
        }
    }//GEN-LAST:event_MEMBERTHREEActionPerformed

    private void DELETEMEMBERActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DELETEMEMBERActionPerformed
        DeleteMemberViewController deleteMemberViewController = new DeleteMemberViewController(this, true);
        deleteMemberViewController.setAllMembers(this.memberList.toArray());
        deleteMemberViewController.setVisible(true);
        
        if(deleteMemberViewController.getMemberWasDeleted()){
            loadMembers();
        }
    }//GEN-LAST:event_DELETEMEMBERActionPerformed

    private void jButtonCloseScreenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCloseScreenActionPerformed
        this.dispatchEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
    }//GEN-LAST:event_jButtonCloseScreenActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HomeViewController.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HomeViewController.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HomeViewController.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HomeViewController.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HomeViewController().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton DELETEMEMBER;
    private javax.swing.JButton MEMBERFOUR;
    private javax.swing.JButton MEMBERONE;
    private javax.swing.JButton MEMBERTHREE;
    private javax.swing.JButton MEMBERTWO;
    private javax.swing.JButton jButtonCloseScreen;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanelTitle;
    // End of variables declaration//GEN-END:variables

}
