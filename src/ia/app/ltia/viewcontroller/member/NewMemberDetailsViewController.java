package ia.app.ltia.viewcontroller.member;

import ia.app.ltia.LifeTrackerConstants;
import ia.app.ltia.LifeTrackerHelper;
import ia.app.ltia.model.Member;
import ia.app.ltia.model.MemberHealth;
import ia.app.ltia.viewcontroller.FrameDragListener;
import ia.app.ltia.viewcontroller.HomeViewController;
import java.util.Calendar;
import java.util.Date;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

/**
 *
 * @author
 */
public class NewMemberDetailsViewController extends javax.swing.JFrame {

    private static final Logger logger = LogManager.getLogger(NewMemberDetailsViewController.class);
    private Member member;
    private boolean isValidAge = false;
    private boolean isValidHeight = false;
    private boolean isValidWeight = false;
    private boolean isValidTargetWeight = false;

    /**
     * Creates new form NewMemberDetailsViewController
     */
    public NewMemberDetailsViewController() {
        initComponents();        
        initUndecoratedFrame();
        initComponentsCustomStyling();
    }
    
    private void initComponentsCustomStyling() {
        
        //jFrame background
        this.getContentPane().setBackground(LifeTrackerConstants.GUI_BACKGROUND_COLOR_2);       
        
        //Top panel background
        this.displayName.setBackground(LifeTrackerConstants.GUI_COLOR_3);
        
        //Text field backgrounds        
        this.SELECTAGE.setBackground(LifeTrackerConstants.GUI_FIELD_BACKGROUND_COLOR_2);
        this.SELECTAGE.setBorder(BorderFactory.createEmptyBorder());                
        this.SELECTWEIGHT.setBackground(LifeTrackerConstants.GUI_FIELD_BACKGROUND_COLOR_2);
        this.SELECTWEIGHT.setBorder(BorderFactory.createEmptyBorder());                
        this.SELECTTARGETWEIGHT.setBackground(LifeTrackerConstants.GUI_FIELD_BACKGROUND_COLOR_2);
        this.SELECTTARGETWEIGHT.setBorder(BorderFactory.createEmptyBorder());                        
        this.SELECTHEIGHT.setBackground(LifeTrackerConstants.GUI_FIELD_BACKGROUND_COLOR_2);
        this.SELECTHEIGHT.setBorder(BorderFactory.createEmptyBorder());                        
        
        this.setResizable(false);
        this.pack();
        this.setLocationRelativeTo(null);        
    }
    
    private void initUndecoratedFrame(){
        
        //To remove title, must set undecorated to true.
        //But dont do that in here, it must be in initComponents so 
        //you must do it in the JFrame properties.
        //this.setUndecorated(true);
        
        //Drag the window from by selecting any part of the frame
        FrameDragListener frameDragListener = new FrameDragListener((java.awt.Window)this);
        this.addMouseListener(frameDragListener);
        this.addMouseMotionListener(frameDragListener);

        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    }     
    
    public void setMember(Member member){
        this.member = member;
        displayName.setText("New Member: " + this.member.getUsername());
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        SELECTAGE = new javax.swing.JTextField();
        AGELABEL = new javax.swing.JLabel();
        SELECTWEIGHT = new javax.swing.JTextField();
        WEIGHTLABEL = new javax.swing.JLabel();
        HEIGHTLABEL = new javax.swing.JLabel();
        SELECTHEIGHT = new javax.swing.JTextField();
        SELECTGENDER = new javax.swing.JComboBox<>();
        GENDERLABEL = new javax.swing.JLabel();
        TDATELABEL = new javax.swing.JLabel();
        SELECTTARGETWEIGHT = new javax.swing.JTextField();
        TWEIGHTLABEL = new javax.swing.JLabel();
        BACKMEMBERDETAILS = new javax.swing.JButton();
        SUBMITMEMBERDETAILS = new javax.swing.JButton();
        validAGE = new javax.swing.JLabel();
        validHEIGHT = new javax.swing.JLabel();
        validWEIGHT = new javax.swing.JLabel();
        validTARGETWEIGHT = new javax.swing.JLabel();
        INFOMEMBER = new javax.swing.JLabel();
        displayName = new javax.swing.JLabel();
        TDATELABEL1 = new javax.swing.JLabel();
        startDatePicker = new org.jdesktop.swingx.JXDatePicker();
        targetDatePicker = new org.jdesktop.swingx.JXDatePicker();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        SELECTAGE.setFont(new java.awt.Font("Keep Calm Med", 0, 12)); // NOI18N
        SELECTAGE.setMinimumSize(new java.awt.Dimension(8, 21));
        SELECTAGE.setPreferredSize(new java.awt.Dimension(8, 21));
        SELECTAGE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SELECTAGEActionPerformed(evt);
            }
        });
        SELECTAGE.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                SELECTAGEKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                SELECTAGEKeyTyped(evt);
            }
        });

        AGELABEL.setFont(new java.awt.Font("Keep Calm Med", 0, 12)); // NOI18N
        AGELABEL.setText("Age");

        SELECTWEIGHT.setFont(new java.awt.Font("Keep Calm Med", 0, 12)); // NOI18N
        SELECTWEIGHT.setMinimumSize(new java.awt.Dimension(8, 21));
        SELECTWEIGHT.setPreferredSize(new java.awt.Dimension(8, 21));
        SELECTWEIGHT.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                SELECTWEIGHTKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                SELECTWEIGHTKeyTyped(evt);
            }
        });

        WEIGHTLABEL.setFont(new java.awt.Font("Keep Calm Med", 0, 12)); // NOI18N
        WEIGHTLABEL.setText("Current " + LifeTrackerConstants.WEIGHT_LABEL);

        HEIGHTLABEL.setFont(new java.awt.Font("Keep Calm Med", 0, 12)); // NOI18N
        HEIGHTLABEL.setText(LifeTrackerConstants.HEIGHT_LABEL);

        SELECTHEIGHT.setFont(new java.awt.Font("Keep Calm Med", 0, 12)); // NOI18N
        SELECTHEIGHT.setMinimumSize(new java.awt.Dimension(8, 21));
        SELECTHEIGHT.setPreferredSize(new java.awt.Dimension(8, 21));
        SELECTHEIGHT.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                SELECTHEIGHTKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                SELECTHEIGHTKeyTyped(evt);
            }
        });

        SELECTGENDER.setFont(new java.awt.Font("Keep Calm Med", 0, 12)); // NOI18N
        SELECTGENDER.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female" }));
        SELECTGENDER.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SELECTGENDERActionPerformed(evt);
            }
        });

        GENDERLABEL.setFont(new java.awt.Font("Keep Calm Med", 0, 12)); // NOI18N
        GENDERLABEL.setText("Gender");

        TDATELABEL.setFont(new java.awt.Font("Keep Calm Med", 0, 12)); // NOI18N
        TDATELABEL.setText("Target Completion Date");

        SELECTTARGETWEIGHT.setFont(new java.awt.Font("Keep Calm Med", 0, 12)); // NOI18N
        SELECTTARGETWEIGHT.setMinimumSize(new java.awt.Dimension(8, 21));
        SELECTTARGETWEIGHT.setPreferredSize(new java.awt.Dimension(8, 21));
        SELECTTARGETWEIGHT.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                SELECTTARGETWEIGHTKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                SELECTTARGETWEIGHTKeyTyped(evt);
            }
        });

        TWEIGHTLABEL.setFont(new java.awt.Font("Keep Calm Med", 0, 12)); // NOI18N
        TWEIGHTLABEL.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        TWEIGHTLABEL.setText("Target " + LifeTrackerConstants.WEIGHT_LABEL);

        BACKMEMBERDETAILS.setFont(new java.awt.Font("Keep Calm Med", 0, 12)); // NOI18N
        BACKMEMBERDETAILS.setText("Back");
        BACKMEMBERDETAILS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BACKMEMBERDETAILSActionPerformed(evt);
            }
        });

        SUBMITMEMBERDETAILS.setFont(new java.awt.Font("Keep Calm Med", 0, 12)); // NOI18N
        SUBMITMEMBERDETAILS.setText("Submit");
        SUBMITMEMBERDETAILS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SUBMITMEMBERDETAILSActionPerformed(evt);
            }
        });

        validAGE.setPreferredSize(new java.awt.Dimension(47, 26));

        INFOMEMBER.setFont(new java.awt.Font("Keep Calm Med", 0, 12)); // NOI18N

        displayName.setFont(new java.awt.Font("Keep Calm Med", 1, 20)); // NOI18N
        displayName.setVerticalTextPosition(javax.swing.SwingConstants.TOP);

        TDATELABEL1.setFont(new java.awt.Font("Keep Calm Med", 0, 12)); // NOI18N
        TDATELABEL1.setText("Start Date");

        startDatePicker.setDate(Calendar.getInstance().getTime());
        startDatePicker.setFont(new java.awt.Font("Keep Calm Med", 0, 11)); // NOI18N
        startDatePicker.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startDatePickerActionPerformed(evt);
            }
        });

        targetDatePicker.setFont(new java.awt.Font("Keep Calm Med", 0, 11)); // NOI18N
        targetDatePicker.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                targetDatePickerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(BACKMEMBERDETAILS, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(68, 68, 68)
                                .addComponent(SUBMITMEMBERDETAILS, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(displayName, javax.swing.GroupLayout.PREFERRED_SIZE, 551, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(GENDERLABEL, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(17, 17, 17)
                                .addComponent(SELECTGENDER, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(AGELABEL, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(22, 22, 22)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(SELECTAGE, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(validAGE, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(WEIGHTLABEL, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(HEIGHTLABEL, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(TWEIGHTLABEL, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jSeparator2)
                                    .addComponent(SELECTHEIGHT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(SELECTWEIGHT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(SELECTTARGETWEIGHT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jSeparator3, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                                    .addComponent(jSeparator4, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(validHEIGHT, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(validWEIGHT, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(validTARGETWEIGHT, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(TDATELABEL)
                                    .addComponent(TDATELABEL1))
                                .addGap(43, 43, 43)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(startDatePicker, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(targetDatePicker, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(INFOMEMBER, javax.swing.GroupLayout.PREFERRED_SIZE, 442, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {startDatePicker, targetDatePicker});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(displayName, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(SELECTAGE, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(AGELABEL))
                    .addComponent(validAGE, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(GENDERLABEL)
                    .addComponent(SELECTGENDER, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addComponent(WEIGHTLABEL))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(SELECTHEIGHT, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(HEIGHTLABEL))
                            .addComponent(validHEIGHT, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(SELECTWEIGHT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(validWEIGHT, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(validTARGETWEIGHT, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(SELECTTARGETWEIGHT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(TWEIGHTLABEL)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TDATELABEL1)
                    .addComponent(startDatePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TDATELABEL)
                    .addComponent(targetDatePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addComponent(INFOMEMBER, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BACKMEMBERDETAILS, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SUBMITMEMBERDETAILS, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {SELECTHEIGHT, SELECTTARGETWEIGHT, SELECTWEIGHT});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SELECTAGEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SELECTAGEActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SELECTAGEActionPerformed

    private void SELECTGENDERActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SELECTGENDERActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SELECTGENDERActionPerformed

    private void BACKMEMBERDETAILSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BACKMEMBERDETAILSActionPerformed
        // TODO add your handling code here:
        NewMemberViewController form1 = new NewMemberViewController();
        form1.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_BACKMEMBERDETAILSActionPerformed

    private void SUBMITMEMBERDETAILSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SUBMITMEMBERDETAILSActionPerformed
        
        if(isValidTargetWeight && isValidWeight && isValidHeight && isValidAge){
            
            int age = Integer.parseInt(SELECTAGE.getText());
            int height = Integer.parseInt(SELECTHEIGHT.getText());
            String gender = SELECTGENDER.getSelectedItem().toString();
            int weight = Integer.parseInt(SELECTWEIGHT.getText());
            int targetWeight = Integer.parseInt(SELECTTARGETWEIGHT.getText());
            Date targetDate = targetDatePicker.getDate();
            String targetDateAsString = LifeTrackerConstants.GUI_DATE_FORMAT.format(targetDate); 
            Date startDate = startDatePicker.getDate();
            String startDateAsString = LifeTrackerConstants.GUI_DATE_FORMAT.format(startDate);

            logger.info("New member details view controller input check (true = pass)");
            logger.info("age = "+ isValidAge);
            logger.info("weight = "+ isValidWeight);
            logger.info("height = "+ isValidHeight);
            logger.info("start date = "+ startDateAsString);
            logger.info("target date = "+ targetDateAsString);
            logger.info("target weight = "+ isValidTargetWeight);                   
            
            MemberHealth newMemberHealth = new MemberHealth(age, height, gender, weight, startDate, targetWeight, targetDate);
            
            logger.debug("Creating new Member Health: ");
            logger.debug(newMemberHealth.toString());
            
            this.member.addAndSetMemberHealth(newMemberHealth);
            
            HomeViewController homeScreen = new HomeViewController();
            homeScreen.setVisible(true);
            dispose();
        }
        else{
            INFOMEMBER.setText("Invalid fields inputted, Please correct and try again"); 
            INFOMEMBER.setForeground(LifeTrackerConstants.GUI_FIELD_ERROR_TEXT_COLOR);
        }
    }//GEN-LAST:event_SUBMITMEMBERDETAILSActionPerformed

    private void SELECTAGEKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SELECTAGEKeyReleased
        String age = SELECTAGE.getText();
        INFOMEMBER.setText("");
        
        if(LifeTrackerHelper.checkNumber(age)){
            isValidAge = true;
            validAGE.setIcon(new ImageIcon(getClass().getResource(LifeTrackerConstants.TICK_ICON)));
        }
        else{
            isValidAge = false;
            if(SELECTAGE.getText().trim().isEmpty()){
                validAGE.setIcon(new ImageIcon(getClass().getResource(LifeTrackerConstants.EMPTY_ICON)));
            }
            else{
                validAGE.setIcon(new ImageIcon(getClass().getResource(LifeTrackerConstants.CROSS_ICON)));
            }            
        }
    }//GEN-LAST:event_SELECTAGEKeyReleased

    private void SELECTAGEKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SELECTAGEKeyTyped
        // TODO add your handling code here:       
    }//GEN-LAST:event_SELECTAGEKeyTyped

    private void SELECTHEIGHTKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SELECTHEIGHTKeyTyped
    }//GEN-LAST:event_SELECTHEIGHTKeyTyped

    private void SELECTWEIGHTKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SELECTWEIGHTKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_SELECTWEIGHTKeyTyped

    private void SELECTTARGETWEIGHTKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SELECTTARGETWEIGHTKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_SELECTTARGETWEIGHTKeyTyped

    private void startDatePickerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startDatePickerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_startDatePickerActionPerformed

    private void SELECTHEIGHTKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SELECTHEIGHTKeyReleased
        String height = SELECTHEIGHT.getText();
        INFOMEMBER.setText("");
        
        if(LifeTrackerHelper.checkNumber(height)){
            isValidHeight = true;
            validHEIGHT.setIcon(new ImageIcon(getClass().getResource(LifeTrackerConstants.TICK_ICON)));
        }
        else{
            isValidHeight = false;
            if(SELECTHEIGHT.getText().trim().isEmpty()){       
                validHEIGHT.setIcon(new ImageIcon(getClass().getResource(LifeTrackerConstants.EMPTY_ICON)));
            }
            else{
                validHEIGHT.setIcon(new ImageIcon(getClass().getResource(LifeTrackerConstants.CROSS_ICON)));                
            }   
        }
    }//GEN-LAST:event_SELECTHEIGHTKeyReleased

    private void targetDatePickerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_targetDatePickerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_targetDatePickerActionPerformed

    private void SELECTWEIGHTKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SELECTWEIGHTKeyReleased
        String weight = SELECTWEIGHT.getText();
        INFOMEMBER.setText("");
        
        if(LifeTrackerHelper.checkNumber(weight)){
            isValidWeight = true;
            validWEIGHT.setIcon(new ImageIcon(getClass().getResource(LifeTrackerConstants.TICK_ICON)));
        }
        else{
            isValidWeight = false;
            if(SELECTWEIGHT.getText().trim().isEmpty()){
                validWEIGHT.setIcon(new ImageIcon(getClass().getResource(LifeTrackerConstants.EMPTY_ICON)));
            }
            else{
                validWEIGHT.setIcon(new ImageIcon(getClass().getResource(LifeTrackerConstants.CROSS_ICON)));
            }
        }
    }//GEN-LAST:event_SELECTWEIGHTKeyReleased

    private void SELECTTARGETWEIGHTKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SELECTTARGETWEIGHTKeyReleased
        String targetWeight = SELECTTARGETWEIGHT.getText();
        INFOMEMBER.setText("");
        
        if(LifeTrackerHelper.checkNumber(targetWeight)){
            isValidTargetWeight = true;
            validTARGETWEIGHT.setIcon(new ImageIcon(getClass().getResource(LifeTrackerConstants.TICK_ICON)));
        }
        else{
            isValidTargetWeight = false;
            if(SELECTTARGETWEIGHT.getText().trim().isEmpty()){
                validTARGETWEIGHT.setIcon(new ImageIcon(getClass().getResource(LifeTrackerConstants.EMPTY_ICON)));
            }
            else{
                validTARGETWEIGHT.setIcon(new ImageIcon(getClass().getResource(LifeTrackerConstants.CROSS_ICON)));
            }
        }
    }//GEN-LAST:event_SELECTTARGETWEIGHTKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewMemberDetailsViewController.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewMemberDetailsViewController.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewMemberDetailsViewController.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewMemberDetailsViewController.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewMemberDetailsViewController().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AGELABEL;
    private javax.swing.JButton BACKMEMBERDETAILS;
    private javax.swing.JLabel GENDERLABEL;
    private javax.swing.JLabel HEIGHTLABEL;
    private javax.swing.JLabel INFOMEMBER;
    private javax.swing.JTextField SELECTAGE;
    private javax.swing.JComboBox<String> SELECTGENDER;
    private javax.swing.JTextField SELECTHEIGHT;
    private javax.swing.JTextField SELECTTARGETWEIGHT;
    private javax.swing.JTextField SELECTWEIGHT;
    private javax.swing.JButton SUBMITMEMBERDETAILS;
    private javax.swing.JLabel TDATELABEL;
    private javax.swing.JLabel TDATELABEL1;
    private javax.swing.JLabel TWEIGHTLABEL;
    private javax.swing.JLabel WEIGHTLABEL;
    private javax.swing.JLabel displayName;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private org.jdesktop.swingx.JXDatePicker startDatePicker;
    private org.jdesktop.swingx.JXDatePicker targetDatePicker;
    private javax.swing.JLabel validAGE;
    private javax.swing.JLabel validHEIGHT;
    private javax.swing.JLabel validTARGETWEIGHT;
    private javax.swing.JLabel validWEIGHT;
    // End of variables declaration//GEN-END:variables
}